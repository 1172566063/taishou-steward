<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zkl.taishou.dao.diagnose.theCustomerConsumption.CustomerCardBalanceRecordDAO">
  <resultMap id="BaseResultMap" type="com.zkl.taishou.common.entity.diagnose.CustomerCardBalanceRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="big_card_balance_num" jdbcType="INTEGER" property="bigCardBalanceNum" />
    <result column="A_card_balance_num" jdbcType="INTEGER" property="aCardBalanceNum" />
    <result column="B_card_balance_num" jdbcType="INTEGER" property="bCardBalanceNum" />
    <result column="C_card_balance_num" jdbcType="INTEGER" property="cCardBalanceNum" />
    <result column="D_card_balance_num" jdbcType="INTEGER" property="dCardBalanceNum" />
    <result column="E_card_balance_num" jdbcType="INTEGER" property="eCardBalanceNum" />
    <result column="big_card_balance_limit" jdbcType="DOUBLE" property="bigCardBalanceLimit" />
    <result column="A_card_balance_limit" jdbcType="DOUBLE" property="aCardBalanceLimit" />
    <result column="B_card_balance_limit" jdbcType="DOUBLE" property="bCardBalanceLimit" />
    <result column="C_card_balance_limit" jdbcType="DOUBLE" property="cCardBalanceLimit" />
    <result column="D_card_balance_limit" jdbcType="DOUBLE" property="dCardBalanceLimit" />
    <result column="E_card_balance_limit" jdbcType="DOUBLE" property="eCardBalanceLimit" />
    <result column="result_id" jdbcType="INTEGER" property="resultId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, big_card_balance_num, A_card_balance_num, B_card_balance_num, C_card_balance_num, 
    D_card_balance_num, E_card_balance_num, big_card_balance_limit, A_card_balance_limit, 
    B_card_balance_limit, C_card_balance_limit, D_card_balance_limit, E_card_balance_limit, 
    result_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_card_balance_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer_card_balance_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zkl.taishou.common.entity.diagnose.CustomerCardBalanceRecord">
    insert into customer_card_balance_record (id, user_id, big_card_balance_num, 
      A_card_balance_num, B_card_balance_num, C_card_balance_num, 
      D_card_balance_num, E_card_balance_num, big_card_balance_limit, 
      A_card_balance_limit, B_card_balance_limit, C_card_balance_limit, 
      D_card_balance_limit, E_card_balance_limit, result_id, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bigCardBalanceNum,jdbcType=INTEGER}, 
      #{aCardBalanceNum,jdbcType=INTEGER}, #{bCardBalanceNum,jdbcType=INTEGER}, #{cCardBalanceNum,jdbcType=INTEGER}, 
      #{dCardBalanceNum,jdbcType=INTEGER}, #{eCardBalanceNum,jdbcType=INTEGER}, #{bigCardBalanceLimit,jdbcType=DOUBLE}, 
      #{aCardBalanceLimit,jdbcType=DOUBLE}, #{bCardBalanceLimit,jdbcType=DOUBLE}, #{cCardBalanceLimit,jdbcType=DOUBLE}, 
      #{dCardBalanceLimit,jdbcType=DOUBLE}, #{eCardBalanceLimit,jdbcType=DOUBLE}, #{resultId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zkl.taishou.common.entity.diagnose.CustomerCardBalanceRecord">
    insert into customer_card_balance_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bigCardBalanceNum != null">
        big_card_balance_num,
      </if>
      <if test="aCardBalanceNum != null">
        A_card_balance_num,
      </if>
      <if test="bCardBalanceNum != null">
        B_card_balance_num,
      </if>
      <if test="cCardBalanceNum != null">
        C_card_balance_num,
      </if>
      <if test="dCardBalanceNum != null">
        D_card_balance_num,
      </if>
      <if test="eCardBalanceNum != null">
        E_card_balance_num,
      </if>
      <if test="bigCardBalanceLimit != null">
        big_card_balance_limit,
      </if>
      <if test="aCardBalanceLimit != null">
        A_card_balance_limit,
      </if>
      <if test="bCardBalanceLimit != null">
        B_card_balance_limit,
      </if>
      <if test="cCardBalanceLimit != null">
        C_card_balance_limit,
      </if>
      <if test="dCardBalanceLimit != null">
        D_card_balance_limit,
      </if>
      <if test="eCardBalanceLimit != null">
        E_card_balance_limit,
      </if>
      <if test="resultId != null">
        result_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bigCardBalanceNum != null">
        #{bigCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="aCardBalanceNum != null">
        #{aCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="bCardBalanceNum != null">
        #{bCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="cCardBalanceNum != null">
        #{cCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="dCardBalanceNum != null">
        #{dCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="eCardBalanceNum != null">
        #{eCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="bigCardBalanceLimit != null">
        #{bigCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="aCardBalanceLimit != null">
        #{aCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="bCardBalanceLimit != null">
        #{bCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="cCardBalanceLimit != null">
        #{cCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="dCardBalanceLimit != null">
        #{dCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="eCardBalanceLimit != null">
        #{eCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="resultId != null">
        #{resultId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into customer_card_balance_record (id, user_id, big_card_balance_num, 
      A_card_balance_num, B_card_balance_num, 
      C_card_balance_num, D_card_balance_num, 
      E_card_balance_num, big_card_balance_limit, 
      A_card_balance_limit, B_card_balance_limit, 
      C_card_balance_limit, D_card_balance_limit, 
      E_card_balance_limit, result_id, create_time
      )
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.bigCardBalanceNum,jdbcType=INTEGER}, 
        #{item.aCardBalanceNum,jdbcType=INTEGER}, #{item.bCardBalanceNum,jdbcType=INTEGER}, 
        #{item.cCardBalanceNum,jdbcType=INTEGER}, #{item.dCardBalanceNum,jdbcType=INTEGER}, 
        #{item.eCardBalanceNum,jdbcType=INTEGER}, #{item.bigCardBalanceLimit,jdbcType=DOUBLE}, 
        #{item.aCardBalanceLimit,jdbcType=DOUBLE}, #{item.bCardBalanceLimit,jdbcType=DOUBLE}, 
        #{item.cCardBalanceLimit,jdbcType=DOUBLE}, #{item.dCardBalanceLimit,jdbcType=DOUBLE}, 
        #{item.eCardBalanceLimit,jdbcType=DOUBLE}, #{item.resultId,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into customer_card_balance_record
    (id, user_id, big_card_balance_num, A_card_balance_num, B_card_balance_num, C_card_balance_num, 
      D_card_balance_num, E_card_balance_num, big_card_balance_limit, A_card_balance_limit, 
      B_card_balance_limit, C_card_balance_limit, D_card_balance_limit, E_card_balance_limit, 
      result_id, create_time)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.userId != null">
          #{item.userId,jdbcType=INTEGER},
        </if>
        <if test="item.userId == null">
          NULL,
        </if>
        <if test="item.bigCardBalanceNum != null">
          #{item.bigCardBalanceNum,jdbcType=INTEGER},
        </if>
        <if test="item.bigCardBalanceNum == null">
          NULL,
        </if>
        <if test="item.aCardBalanceNum != null">
          #{item.aCardBalanceNum,jdbcType=INTEGER},
        </if>
        <if test="item.aCardBalanceNum == null">
          NULL,
        </if>
        <if test="item.bCardBalanceNum != null">
          #{item.bCardBalanceNum,jdbcType=INTEGER},
        </if>
        <if test="item.bCardBalanceNum == null">
          NULL,
        </if>
        <if test="item.cCardBalanceNum != null">
          #{item.cCardBalanceNum,jdbcType=INTEGER},
        </if>
        <if test="item.cCardBalanceNum == null">
          NULL,
        </if>
        <if test="item.dCardBalanceNum != null">
          #{item.dCardBalanceNum,jdbcType=INTEGER},
        </if>
        <if test="item.dCardBalanceNum == null">
          NULL,
        </if>
        <if test="item.eCardBalanceNum != null">
          #{item.eCardBalanceNum,jdbcType=INTEGER},
        </if>
        <if test="item.eCardBalanceNum == null">
          NULL,
        </if>
        <if test="item.bigCardBalanceLimit != null">
          #{item.bigCardBalanceLimit,jdbcType=DOUBLE},
        </if>
        <if test="item.bigCardBalanceLimit == null">
          NULL,
        </if>
        <if test="item.aCardBalanceLimit != null">
          #{item.aCardBalanceLimit,jdbcType=DOUBLE},
        </if>
        <if test="item.aCardBalanceLimit == null">
          NULL,
        </if>
        <if test="item.bCardBalanceLimit != null">
          #{item.bCardBalanceLimit,jdbcType=DOUBLE},
        </if>
        <if test="item.bCardBalanceLimit == null">
          NULL,
        </if>
        <if test="item.cCardBalanceLimit != null">
          #{item.cCardBalanceLimit,jdbcType=DOUBLE},
        </if>
        <if test="item.cCardBalanceLimit == null">
          NULL,
        </if>
        <if test="item.dCardBalanceLimit != null">
          #{item.dCardBalanceLimit,jdbcType=DOUBLE},
        </if>
        <if test="item.dCardBalanceLimit == null">
          NULL,
        </if>
        <if test="item.eCardBalanceLimit != null">
          #{item.eCardBalanceLimit,jdbcType=DOUBLE},
        </if>
        <if test="item.eCardBalanceLimit == null">
          NULL,
        </if>
        <if test="item.resultId != null">
          #{item.resultId,jdbcType=INTEGER},
        </if>
        <if test="item.resultId == null">
          NULL,
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zkl.taishou.common.entity.diagnose.CustomerCardBalanceRecord">
    update customer_card_balance_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bigCardBalanceNum != null">
        big_card_balance_num = #{bigCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="aCardBalanceNum != null">
        A_card_balance_num = #{aCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="bCardBalanceNum != null">
        B_card_balance_num = #{bCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="cCardBalanceNum != null">
        C_card_balance_num = #{cCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="dCardBalanceNum != null">
        D_card_balance_num = #{dCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="eCardBalanceNum != null">
        E_card_balance_num = #{eCardBalanceNum,jdbcType=INTEGER},
      </if>
      <if test="bigCardBalanceLimit != null">
        big_card_balance_limit = #{bigCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="aCardBalanceLimit != null">
        A_card_balance_limit = #{aCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="bCardBalanceLimit != null">
        B_card_balance_limit = #{bCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="cCardBalanceLimit != null">
        C_card_balance_limit = #{cCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="dCardBalanceLimit != null">
        D_card_balance_limit = #{dCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="eCardBalanceLimit != null">
        E_card_balance_limit = #{eCardBalanceLimit,jdbcType=DOUBLE},
      </if>
      <if test="resultId != null">
        result_id = #{resultId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zkl.taishou.common.entity.diagnose.CustomerCardBalanceRecord">
    update customer_card_balance_record
    set user_id = #{userId,jdbcType=INTEGER},
      big_card_balance_num = #{bigCardBalanceNum,jdbcType=INTEGER},
      A_card_balance_num = #{aCardBalanceNum,jdbcType=INTEGER},
      B_card_balance_num = #{bCardBalanceNum,jdbcType=INTEGER},
      C_card_balance_num = #{cCardBalanceNum,jdbcType=INTEGER},
      D_card_balance_num = #{dCardBalanceNum,jdbcType=INTEGER},
      E_card_balance_num = #{eCardBalanceNum,jdbcType=INTEGER},
      big_card_balance_limit = #{bigCardBalanceLimit,jdbcType=DOUBLE},
      A_card_balance_limit = #{aCardBalanceLimit,jdbcType=DOUBLE},
      B_card_balance_limit = #{bCardBalanceLimit,jdbcType=DOUBLE},
      C_card_balance_limit = #{cCardBalanceLimit,jdbcType=DOUBLE},
      D_card_balance_limit = #{dCardBalanceLimit,jdbcType=DOUBLE},
      E_card_balance_limit = #{eCardBalanceLimit,jdbcType=DOUBLE},
      result_id = #{resultId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update customer_card_balance_record
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.userId}
        </foreach>
      </trim>
      <trim prefix="big_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.bigCardBalanceNum}
        </foreach>
      </trim>
      <trim prefix="A_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.aCardBalanceNum}
        </foreach>
      </trim>
      <trim prefix="B_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.bCardBalanceNum}
        </foreach>
      </trim>
      <trim prefix="C_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.cCardBalanceNum}
        </foreach>
      </trim>
      <trim prefix="D_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.dCardBalanceNum}
        </foreach>
      </trim>
      <trim prefix="E_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.eCardBalanceNum}
        </foreach>
      </trim>
      <trim prefix="big_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.bigCardBalanceLimit}
        </foreach>
      </trim>
      <trim prefix="A_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.aCardBalanceLimit}
        </foreach>
      </trim>
      <trim prefix="B_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.bCardBalanceLimit}
        </foreach>
      </trim>
      <trim prefix="C_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.cCardBalanceLimit}
        </foreach>
      </trim>
      <trim prefix="D_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.dCardBalanceLimit}
        </foreach>
      </trim>
      <trim prefix="E_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.eCardBalanceLimit}
        </foreach>
      </trim>
      <trim prefix="result_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.resultId}
        </foreach>
      </trim>
      <trim prefix="create_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createTime}
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update customer_card_balance_record
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userId != null ">
            when  #{item.id} then #{item.userId}
          </if>
          <if test="item.userId == null ">
            when  #{item.id} then customer_card_balance_record.user_id
          </if>
        </foreach>
      </trim>
      <trim prefix="big_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.bigCardBalanceNum != null ">
            when  #{item.id} then #{item.bigCardBalanceNum}
          </if>
          <if test="item.bigCardBalanceNum == null ">
            when  #{item.id} then customer_card_balance_record.big_card_balance_num
          </if>
        </foreach>
      </trim>
      <trim prefix="A_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.aCardBalanceNum != null ">
            when  #{item.id} then #{item.aCardBalanceNum}
          </if>
          <if test="item.aCardBalanceNum == null ">
            when  #{item.id} then customer_card_balance_record.A_card_balance_num
          </if>
        </foreach>
      </trim>
      <trim prefix="B_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.bCardBalanceNum != null ">
            when  #{item.id} then #{item.bCardBalanceNum}
          </if>
          <if test="item.bCardBalanceNum == null ">
            when  #{item.id} then customer_card_balance_record.B_card_balance_num
          </if>
        </foreach>
      </trim>
      <trim prefix="C_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.cCardBalanceNum != null ">
            when  #{item.id} then #{item.cCardBalanceNum}
          </if>
          <if test="item.cCardBalanceNum == null ">
            when  #{item.id} then customer_card_balance_record.C_card_balance_num
          </if>
        </foreach>
      </trim>
      <trim prefix="D_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.dCardBalanceNum != null ">
            when  #{item.id} then #{item.dCardBalanceNum}
          </if>
          <if test="item.dCardBalanceNum == null ">
            when  #{item.id} then customer_card_balance_record.D_card_balance_num
          </if>
        </foreach>
      </trim>
      <trim prefix="E_card_balance_num =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.eCardBalanceNum != null ">
            when  #{item.id} then #{item.eCardBalanceNum}
          </if>
          <if test="item.eCardBalanceNum == null ">
            when  #{item.id} then customer_card_balance_record.E_card_balance_num
          </if>
        </foreach>
      </trim>
      <trim prefix="big_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.bigCardBalanceLimit != null ">
            when  #{item.id} then #{item.bigCardBalanceLimit}
          </if>
          <if test="item.bigCardBalanceLimit == null ">
            when  #{item.id} then customer_card_balance_record.big_card_balance_limit
          </if>
        </foreach>
      </trim>
      <trim prefix="A_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.aCardBalanceLimit != null ">
            when  #{item.id} then #{item.aCardBalanceLimit}
          </if>
          <if test="item.aCardBalanceLimit == null ">
            when  #{item.id} then customer_card_balance_record.A_card_balance_limit
          </if>
        </foreach>
      </trim>
      <trim prefix="B_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.bCardBalanceLimit != null ">
            when  #{item.id} then #{item.bCardBalanceLimit}
          </if>
          <if test="item.bCardBalanceLimit == null ">
            when  #{item.id} then customer_card_balance_record.B_card_balance_limit
          </if>
        </foreach>
      </trim>
      <trim prefix="C_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.cCardBalanceLimit != null ">
            when  #{item.id} then #{item.cCardBalanceLimit}
          </if>
          <if test="item.cCardBalanceLimit == null ">
            when  #{item.id} then customer_card_balance_record.C_card_balance_limit
          </if>
        </foreach>
      </trim>
      <trim prefix="D_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.dCardBalanceLimit != null ">
            when  #{item.id} then #{item.dCardBalanceLimit}
          </if>
          <if test="item.dCardBalanceLimit == null ">
            when  #{item.id} then customer_card_balance_record.D_card_balance_limit
          </if>
        </foreach>
      </trim>
      <trim prefix="E_card_balance_limit =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.eCardBalanceLimit != null ">
            when  #{item.id} then #{item.eCardBalanceLimit}
          </if>
          <if test="item.eCardBalanceLimit == null ">
            when  #{item.id} then customer_card_balance_record.E_card_balance_limit
          </if>
        </foreach>
      </trim>
      <trim prefix="result_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.resultId != null ">
            when  #{item.id} then #{item.resultId}
          </if>
          <if test="item.resultId == null ">
            when  #{item.id} then customer_card_balance_record.result_id
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.id} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.id} then customer_card_balance_record.create_time
          </if>
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
</mapper>