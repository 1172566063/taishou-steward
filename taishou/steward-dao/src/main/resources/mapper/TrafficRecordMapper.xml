<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zkl.taishou.dao.diagnose.TrafficRecordDAO">
  <resultMap id="BaseResultMap" type="com.zkl.taishou.common.entity.diagnose.TrafficRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="toShop_customer_count" jdbcType="INTEGER" property="toshopCustomerCount" />
    <result column="toShop_count" jdbcType="INTEGER" property="toshopCount" />
    <result column="nursing_count" jdbcType="INTEGER" property="nursingCount" />
    <result column="employees_labor_count" jdbcType="INTEGER" property="employeesLaborCount" />
    <result column="beds_use_count" jdbcType="INTEGER" property="bedsUseCount" />
    <result column="result_id" jdbcType="INTEGER" property="resultId" />
    <result column="create_rime" jdbcType="TIMESTAMP" property="createRime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, toShop_customer_count, toShop_count, nursing_count, employees_labor_count, 
    beds_use_count, result_id, create_rime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from traffic_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from traffic_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zkl.taishou.common.entity.diagnose.TrafficRecord">
    insert into traffic_record (id, user_id, toShop_customer_count,
      toShop_count, nursing_count, employees_labor_count, 
      beds_use_count, result_id, create_rime
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{toshopCustomerCount,jdbcType=INTEGER}, 
      #{toshopCount,jdbcType=INTEGER}, #{nursingCount,jdbcType=INTEGER}, #{employeesLaborCount,jdbcType=INTEGER}, 
      #{bedsUseCount,jdbcType=INTEGER}, #{resultId,jdbcType=INTEGER}, #{createRime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zkl.taishou.common.entity.diagnose.TrafficRecord">
    insert into traffic_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="toshopCustomerCount != null">
        toShop_customer_count,
      </if>
      <if test="toshopCount != null">
        toShop_count,
      </if>
      <if test="nursingCount != null">
        nursing_count,
      </if>
      <if test="employeesLaborCount != null">
        employees_labor_count,
      </if>
      <if test="bedsUseCount != null">
        beds_use_count,
      </if>
      <if test="resultId != null">
        result_id,
      </if>
      <if test="createRime != null">
        create_rime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="toshopCustomerCount != null">
        #{toshopCustomerCount,jdbcType=INTEGER},
      </if>
      <if test="toshopCount != null">
        #{toshopCount,jdbcType=INTEGER},
      </if>
      <if test="nursingCount != null">
        #{nursingCount,jdbcType=INTEGER},
      </if>
      <if test="employeesLaborCount != null">
        #{employeesLaborCount,jdbcType=INTEGER},
      </if>
      <if test="bedsUseCount != null">
        #{bedsUseCount,jdbcType=INTEGER},
      </if>
      <if test="resultId != null">
        #{resultId,jdbcType=INTEGER},
      </if>
      <if test="createRime != null">
        #{createRime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into traffic_record (id, user_id, toShop_customer_count,
      toShop_count, nursing_count, employees_labor_count, 
      beds_use_count, result_id, create_rime
      )
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.toshopCustomerCount,jdbcType=INTEGER}, 
        #{item.toshopCount,jdbcType=INTEGER}, #{item.nursingCount,jdbcType=INTEGER}, #{item.employeesLaborCount,jdbcType=INTEGER}, 
        #{item.bedsUseCount,jdbcType=INTEGER}, #{item.resultId,jdbcType=INTEGER}, #{item.createRime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into traffic_record
    (id, user_id, toShop_customer_count, toShop_count, nursing_count, employees_labor_count, 
      beds_use_count, result_id, create_rime)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.userId != null">
          #{item.userId,jdbcType=INTEGER},
        </if>
        <if test="item.userId == null">
          NULL,
        </if>
        <if test="item.toshopCustomerCount != null">
          #{item.toshopCustomerCount,jdbcType=INTEGER},
        </if>
        <if test="item.toshopCustomerCount == null">
          NULL,
        </if>
        <if test="item.toshopCount != null">
          #{item.toshopCount,jdbcType=INTEGER},
        </if>
        <if test="item.toshopCount == null">
          NULL,
        </if>
        <if test="item.nursingCount != null">
          #{item.nursingCount,jdbcType=INTEGER},
        </if>
        <if test="item.nursingCount == null">
          NULL,
        </if>
        <if test="item.employeesLaborCount != null">
          #{item.employeesLaborCount,jdbcType=INTEGER},
        </if>
        <if test="item.employeesLaborCount == null">
          NULL,
        </if>
        <if test="item.bedsUseCount != null">
          #{item.bedsUseCount,jdbcType=INTEGER},
        </if>
        <if test="item.bedsUseCount == null">
          NULL,
        </if>
        <if test="item.resultId != null">
          #{item.resultId,jdbcType=INTEGER},
        </if>
        <if test="item.resultId == null">
          NULL,
        </if>
        <if test="item.createRime != null">
          #{item.createRime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createRime == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zkl.taishou.common.entity.diagnose.TrafficRecord">
    update traffic_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="toshopCustomerCount != null">
        toShop_customer_count = #{toshopCustomerCount,jdbcType=INTEGER},
      </if>
      <if test="toshopCount != null">
        toShop_count = #{toshopCount,jdbcType=INTEGER},
      </if>
      <if test="nursingCount != null">
        nursing_count = #{nursingCount,jdbcType=INTEGER},
      </if>
      <if test="employeesLaborCount != null">
        employees_labor_count = #{employeesLaborCount,jdbcType=INTEGER},
      </if>
      <if test="bedsUseCount != null">
        beds_use_count = #{bedsUseCount,jdbcType=INTEGER},
      </if>
      <if test="resultId != null">
        result_id = #{resultId,jdbcType=INTEGER},
      </if>
      <if test="createRime != null">
        create_rime = #{createRime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zkl.taishou.common.entity.diagnose.TrafficRecord">
    update traffic_record
    set user_id = #{userId,jdbcType=INTEGER},
      toShop_customer_count = #{toshopCustomerCount,jdbcType=INTEGER},
      toShop_count = #{toshopCount,jdbcType=INTEGER},
      nursing_count = #{nursingCount,jdbcType=INTEGER},
      employees_labor_count = #{employeesLaborCount,jdbcType=INTEGER},
      beds_use_count = #{bedsUseCount,jdbcType=INTEGER},
      result_id = #{resultId,jdbcType=INTEGER},
      create_rime = #{createRime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update traffic_record
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.userId}
        </foreach>
      </trim>
      <trim prefix="toShop_customer_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.toshopCustomerCount}
        </foreach>
      </trim>
      <trim prefix="toShop_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.toshopCount}
        </foreach>
      </trim>
      <trim prefix="nursing_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.nursingCount}
        </foreach>
      </trim>
      <trim prefix="employees_labor_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.employeesLaborCount}
        </foreach>
      </trim>
      <trim prefix="beds_use_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.bedsUseCount}
        </foreach>
      </trim>
      <trim prefix="result_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.resultId}
        </foreach>
      </trim>
      <trim prefix="create_rime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.createRime}
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update traffic_record
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.userId != null ">
            when  #{item.id} then #{item.userId}
          </if>
          <if test="item.userId == null ">
            when  #{item.id} then traffic_record.user_id
          </if>
        </foreach>
      </trim>
      <trim prefix="toShop_customer_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.toshopCustomerCount != null ">
            when  #{item.id} then #{item.toshopCustomerCount}
          </if>
          <if test="item.toshopCustomerCount == null ">
            when  #{item.id} then traffic_record.toShop_customer_count
          </if>
        </foreach>
      </trim>
      <trim prefix="toShop_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.toshopCount != null ">
            when  #{item.id} then #{item.toshopCount}
          </if>
          <if test="item.toshopCount == null ">
            when  #{item.id} then traffic_record.toShop_count
          </if>
        </foreach>
      </trim>
      <trim prefix="nursing_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.nursingCount != null ">
            when  #{item.id} then #{item.nursingCount}
          </if>
          <if test="item.nursingCount == null ">
            when  #{item.id} then traffic_record.nursing_count
          </if>
        </foreach>
      </trim>
      <trim prefix="employees_labor_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.employeesLaborCount != null ">
            when  #{item.id} then #{item.employeesLaborCount}
          </if>
          <if test="item.employeesLaborCount == null ">
            when  #{item.id} then traffic_record.employees_labor_count
          </if>
        </foreach>
      </trim>
      <trim prefix="beds_use_count =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.bedsUseCount != null ">
            when  #{item.id} then #{item.bedsUseCount}
          </if>
          <if test="item.bedsUseCount == null ">
            when  #{item.id} then traffic_record.beds_use_count
          </if>
        </foreach>
      </trim>
      <trim prefix="result_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.resultId != null ">
            when  #{item.id} then #{item.resultId}
          </if>
          <if test="item.resultId == null ">
            when  #{item.id} then traffic_record.result_id
          </if>
        </foreach>
      </trim>
      <trim prefix="create_rime =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createRime != null ">
            when  #{item.id} then #{item.createRime}
          </if>
          <if test="item.createRime == null ">
            when  #{item.id} then traffic_record.create_rime
          </if>
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
</mapper>